# Setup for large devices with small root.
#
# Format is same as sfdisk but start and size will be generated.
#
# Expansions:
#   SECTOR_SIZE(<count>*<units>) :> $(( ($expr) / logical sector size ))
#      valid units:  KB, MB, GB
#   ALIGN_SECTOR :> prior sector start + size rounded up to 1MB
#   FORMAT( fstype ) :> <removed>, partition will be formatted.
#      valid fstype: zero, swap or anything with mkfs.$fstype
#   LABEL( label ) :> <removed>, fs will be labeled.
#
# Basically this works around sfdisk refusing to allow missing start=
# when long format is used to include partition names.
#
# Warning: sfdisk chokes with mixed UID and short (S L) notation.
# Comments only allowed with # in first column

label: gpt
unit: sectors
first-lba: SECTOR_SIZE(512*KB)

start= SECTOR_SIZE(512*KB), size= SECTOR_SIZE(512*KB), type=21686148-6449-6E6F-744E-656564454649, FORMAT(zero)
start= ALIGN_SECTOR,        size= SECTOR_SIZE(33*MB),  type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B, name="EFI-System", FORMAT(fat32), LABEL(EFI-SYSTEM)
start= ALIGN_SECTOR,        size= SECTOR_SIZE(1*GB),   type=0657FD6D-A4AB-43C4-84E5-0933C84B4F4F, name="USB_SWAP", FORMAT(swap), LABEL(USB_SWAP)
start= ALIGN_SECTOR,        size= SECTOR_SIZE(2*GB),   type=0FC63DAF-8483-4772-8E79-3D69D8477DE4, name="USB_ROOT", FORMAT(ext4), LABEL(USB_ROOT)
start= ALIGN_SECTOR,                                   type=0FC63DAF-8483-4772-8E79-3D69D8477DE4, name="USB_DATA", FORMAT(btrfs), LABEL(USB_BTRFS_DATA)
