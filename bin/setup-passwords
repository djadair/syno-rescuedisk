#!/bin/bash

# safely set up passwords in new file system.
# This is basically grep $(whoami} /etc/shadow >> rootfs/etc/shadow
# but using useradd and chpasswd to be more portable.

# YOU MUST run this script as the user who you want to
# clone into the new OS and that user must have sudo privlege.
# It may be repeated for multiple users if desired.


if [ -z "$1" -o "$1" = "-h" -o "$1" = "--help" ] ; then
    echo "syntax: $0 rootfs_dir"
    echo
    echo "This script will copy your current user name and password"
    echo "to the specified directory e.g. so you can log in."
    echo
    echo "The root password will also be set to your current password."
    echo
    echo "This must be run as a real user NOT root."
    echo
    exit 1
fi

if [ $(id -u) -eq 0 ]; then
        echo "This must run as the user you want to clone." 1>&2
        exit 1
fi

dir=$(readlink -f $1)
USERNAME=$(whoami)
USERID=$(id -u)

if [ ! -d "${dir}" -o ! -f "${dir}/etc/passwd" ] ; then
    echo "$dir does not seem to be a rootfs"
    exit 1
fi

ddev=$(df -h $dir | cut -f1 -d" " | tail -1)
rdev=$(df -h "/"  | cut -f1 -d" " | tail -1)

if [ "$ddev" = "$rdev" ] ; then
    echo "$dir and "/" are mounted on the same device."
    echo "Aborting to avoid corrupting local FS."
    exit 1
fi

echo "Validating sudo permissions"
if ! sudo -v 2>/dev/null; then
    echo "Sorry could not validate your credentials"
    echo
    echo "If this is an error edit the script to delete this check"
    echo "and you will be prompted below."
fi

PASSCRYPT=$(sudo cat /etc/passwd | awk -v user=$USERNAME -F : 'user == $1 {print $2}')
if [ "$PASSCRYPT" = "x" -a -f /etc/shadow ] ; then
    PASSCRYPT=$(sudo cat /etc/shadow | awk -v user=$USERNAME -F : 'user == $1 {print $2}')
fi

if [ -z "$PASSCRYPT" -o "$PASSCRYPT" = "x" ] ; then
    echo "Could not locate current users password"
    exit 1
fi

if [ "$PASSCRYPT" = '*' ] ; then
    echo "Current account is not a login account, aborting."
    exit 1
fi

if [ ! "$PASSCRYPT" = "${PASSCRYPT##'!'}" ] ; then
   echo "WARNING: Current user password login disabled, using anyway"
   PASSCRYPT=${PASSCRYPT##'!'}
fi

echo "Setting up $dir with $USERID ($USERNAME) : $PASSCRYPT"

if grep -q "$USERNAME" ${dir}/etc/passwd ; then
    echo "User $USERNAME already exists in ${dir}."
    echo "NOT CHANGING existing UID"
    sudo usermod -R $dir -a -G sudo $USERNAME
else
    sudo useradd -R $dir -m -u $USERID -G sudo $USERNAME
fi

cat <<EOF | sudo chpasswd -e -R $dir
${USERNAME}:${PASSCRYPT}
root:${PASSCRYPT}
EOF

echo "done"

